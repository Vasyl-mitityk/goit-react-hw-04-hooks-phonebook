{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactsList/ContactsList.module.css","components/FormContact/FormContact.module.css","components/FormContact/FormContact.js","components/Filter/Filter.js","components/ContactsList/ContactListItem/ContactListItem.js","components/ContactsList/ContactsList.js","App.js","reportWebVitals.js","index.js","components/ContactsList/ContactListItem/ContactListItem.module.css"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","reset","className","s","form","preventDefault","label","input","type","pattern","onChange","title","required","button","btnText","size","color","Filter","style","filterLabel","filterInput","ContactListItem","contactName","contactNumber","onClickDeleteContact","listItem","listItemText","onClick","ContactList","contacts","onDeleteContact","list","map","id","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","find","contact","alert","newContact","shortid","generate","prevContacts","target","ContactsList","toLowerCase","includes","contactId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.128feaeb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__1nWtY\",\"filterInput\":\"Filter_filterInput__179s5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__T6uzF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormContact_form__1KgsD\",\"label\":\"FormContact_label__3L7Ot\",\"input\":\"FormContact_input__12Wlw\",\"button\":\"FormContact_button__3s1xt\",\"btnText\":\"FormContact_btnText__3dY-7\"};","import React, { useState } from \"react\";\r\nimport s from \"./FormContact.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { AiOutlineUserAdd } from \"react-icons/ai\";\r\n\r\nexport default function ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(name, number);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button className={s.button} type=\"submit\">\r\n        <span className={s.btnText}>Add contact</span>\r\n        <AiOutlineUserAdd size=\"20px\" color=\"rgb(130, 27, 112)\" />\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={style.filterLabel}>\r\n    Find contacts by name\r\n    <input\r\n      className={style.filterInput}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import style from \"./ContactListItem.module.css\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { AiOutlineUserDelete } from \"react-icons/ai\";\r\n\r\nconst ContactListItem = ({\r\n  contactName,\r\n  contactNumber,\r\n  onClickDeleteContact,\r\n}) => {\r\n  return (\r\n    <li className={style.listItem}>\r\n      <span className={style.listItemText}>{contactName}:</span>\r\n      <span className={style.listItemText}>{contactNumber}</span>\r\n      <button className={style.button} type=\"button\" onClick={onClickDeleteContact}>\r\n        Delete <AiOutlineUserDelete size=\"15px\" />\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  contactName: PropTypes.string.isRequired,\r\n  contactNumber: PropTypes.string.isRequired,\r\n  onClickDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;","import style from \"./ContactsList.module.css\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListItem from \"../ContactsList/ContactListItem/ContactListItem\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul className={style.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <ContactListItem\r\n        key={id}\r\n        contactName={name}\r\n        contactNumber={number}\r\n        onClickDeleteContact={() => onDeleteContact(id)}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;","import React, { useState, useEffect } from \"react\";\nimport shortid from \"shortid\";\nimport FormContact from \"./components/FormContact/FormContact\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactsList from \"./components/ContactsList/ContactsList\";\nimport \"./App.css\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(\"contacts\")) ?? [];\n  });\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (name, number) => {\n    if (contacts.find((contact) => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    setContacts((prevContacts) => [newContact, ...prevContacts]);\n  };\n  const changeFilter = ({ target }) => {\n    setFilter(target.value);\n  };\n\n  const getVisibleContacts = () => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts(contacts.filter((contact) => contact.id !== contactId));\n  };\n\n  return (\n    <>\n      <h1 >Phonebook</h1>\n\n      <FormContact onSubmit={addContact} />\n\n      <h2>Contants</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactsList\n        contacts={getVisibleContacts()}\n        onDeleteContact={deleteContact}\n      ></ContactsList>\n    </>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem___caTB\",\"listItemText\":\"ContactListItem_listItemText__1o7Tn\",\"button\":\"ContactListItem_button__1_W6p\"};"],"sourceRoot":""}